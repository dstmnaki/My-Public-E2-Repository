@name EGP-Hud
@inputs EGP:wirelink [GunLeft GunRight GunLeftBack GunRightBack]:entity ReadyLeft ReadyRight ReadyLeftBack ReadyRightBack AmmoLeftBack AmmoRightBack AmmoLeft AmmoRight
@persist I3 Count Ready WH:vector2
if(dupefinished()){reset()}
if(first()){
    
    EGP:egpClear()
    
    WH=vec2(egpScrW(owner()),egpScrH(owner()))/2
    
    EGP:egpText(1,"+",vec2(0,0)+WH)
    EGP:egpAlign(1,1,1)
    
    EGP:egpText(2,"122mm",vec2(-225,35)+WH)
    EGP:egpAlign(2,1,1)
    EGP:egpSize(2,22)
    
    EGP:egpText(3,"3",vec2(-225,0)+WH)
    EGP:egpAlign(3,1,1)
    EGP:egpSize(3,45)
    
    EGP:egpText(4,"122mm",vec2(225,35)+WH)
    EGP:egpAlign(4,1,1)
    EGP:egpSize(4,22)
    
    EGP:egpText(5,"3",vec2(225,0)+WH)
    EGP:egpAlign(5,1,1)
    EGP:egpSize(5,45)
    
    EGP:egpText(6,"30mm",vec2(-35,10)+WH)
    EGP:egpAlign(6,1,1)
    EGP:egpSize(6,15)
    
    EGP:egpText(7,"500",vec2(-35,-5)+WH)
    EGP:egpAlign(7,1,1)
    EGP:egpSize(7,15)
    
    EGP:egpText(8,"30mm",vec2(35,10)+WH)
    EGP:egpAlign(8,1,1)
    EGP:egpSize(8,15)
    
    EGP:egpText(9,"500",vec2(35,-5)+WH)
    EGP:egpAlign(9,1,1)
    EGP:egpSize(9,15)
    
    
    Count=45
    timer("create shit",100)
}
if(clk("create shit")){
    if(I3<Count){
        if(perf()){
            I3++
            local I2 = I3+80
            local P = vec2(-0,0)+WH
            local PosTest=vec2(265*1.1,0):rotate(-45+((90/Count)*I3))
            local PosTest2=vec2(255*1.1,0):rotate(-45+((90/Count)*I3))
            EGP:egpLine(I2,PosTest+P,PosTest2+P)
            EGP:egpColor(I2,vec(25))
            EGP:egpSize(I2,2)
            
            local I2 = I3+80+Count
            local P = vec2(0,0)+WH
            local PosTest=vec2(265*1.1,0):rotate(45+180-((90/Count)*I3))
            local PosTest2=vec2(255*1.1,0):rotate(45+180-((90/Count)*I3))
            EGP:egpLine(I2,PosTest+P,PosTest2+P)
            EGP:egpColor(I2,vec(25))
            EGP:egpSize(I2,2)
            timer("create shit",100)
        }else{
            timer("create shit",500)
        }
    }else{
        timer("int1",100)
        timer("int2",100)
    }
}
if(clk("int1")){
    timer("int1",250)
    if(changed(AmmoLeftBack)){
        EGP:egpSetText(3,AmmoLeftBack:toString())
    }
    if(changed(AmmoRightBack)){
        EGP:egpSetText(5,AmmoRightBack:toString())
    }
    if(changed(AmmoLeft)){
        EGP:egpSetText(7,AmmoLeft:toString())
    }
    if(changed(AmmoRight)){
        EGP:egpSetText(9,AmmoRight:toString())
    }
}
if(clk("int2")){
    timer("int2",100)
    Progress=(round(GunLeftBack:acfReloadProgress()*100)+round(GunRightBack:acfReloadProgress()*100))/2
    
    Progress2=Progress/100
    if(Progress<100){
        for(I=1,Count){
            local I2 = I+80+Count
            if(I<=(Count*(Progress2))){
                EGP:egpColor(I2,vec(255,0,0))
            }else{
                EGP:egpColor(I2,vec(25))
            }
            local I2 = I+80
            if(I<=(Count*(Progress2))){
                EGP:egpColor(I2,vec(255,0,0))
            }else{
                EGP:egpColor(I2,vec(25))
            }
        }
    }
    if((changed(Progress)&(Progress==1))|((changed(ReadyLeftBack)|changed(ReadyRightBack))&ReadyLeftBack&ReadyRightBack)){
        for(I=1+80,Count+80+Count){
            EGP:egpColor(I,vec(0,255,255))
        }
    }
}
